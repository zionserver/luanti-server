name: Build and Deploy Luanti Server

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
      env:
        LANG: C.UTF-8
        DEBIAN_FRONTEND: noninteractive

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y --no-install-recommends \
          build-essential cmake git \
          libsqlite3-dev libzstd-dev libcurl4-gnutls-dev \
          libncurses-dev libgmp-dev libjsoncpp-dev libssl-dev \
          zlib1g-dev libluajit-5.1-dev gettext pkg-config \
          ninja-build ca-certificates wget binutils dpkg-dev
        apt-get clean
        rm -rf /var/lib/apt/lists/*

    - name: Build server
      run: |
        git clone --depth 1 --branch stable-5 https://github.com/luanti-org/luanti
        cd luanti
        cmake . \
          -DRUN_IN_PLACE=FALSE \
          -DBUILD_SERVER=TRUE \
          -DBUILD_CLIENT=FALSE \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_CURSES=ON \
          -DENABLE_GETTEXT=ON \
          -DENABLE_SOUND=OFF \
          -DENABLE_GLES=OFF \
          -DENABLE_FREETYPE=OFF \
          -DENABLE_SYSTEM_JSONCPP=ON
        make -j$(nproc)
        cpack -G DEB
        mv luanti-*.deb ../luanti-server.deb
        cd ..

    - name: Verify DEB file
      run: |
        ls -la luanti-server.deb
        dpkg -c luanti-server.deb | grep bin/luanti

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: luanti-server
        path: luanti-server.deb

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: luanti-server
        path: dist

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Rename to latest
      run: mv dist/luanti-server.deb dist/luanti-server-latest.deb

    - name: Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

  pages-build-deployment:
    needs: deploy
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4